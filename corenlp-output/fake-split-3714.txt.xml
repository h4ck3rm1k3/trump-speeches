<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="CoreNLP-to-HTML.xsl" type="text/xsl"?>
<root>
  <document>
    <sentences>
      <sentence id="1">
        <tokens>
          <token id="1">
            <word>And</word>
            <lemma>and</lemma>
            <CharacterOffsetBegin>0</CharacterOffsetBegin>
            <CharacterOffsetEnd>3</CharacterOffsetEnd>
            <POS>CC</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="2">
            <word>all</word>
            <lemma>all</lemma>
            <CharacterOffsetBegin>4</CharacterOffsetBegin>
            <CharacterOffsetEnd>7</CharacterOffsetEnd>
            <POS>DT</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="3">
            <word>we</word>
            <lemma>we</lemma>
            <CharacterOffsetBegin>8</CharacterOffsetBegin>
            <CharacterOffsetEnd>10</CharacterOffsetEnd>
            <POS>PRP</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="4">
            <word>want</word>
            <lemma>want</lemma>
            <CharacterOffsetBegin>11</CharacterOffsetBegin>
            <CharacterOffsetEnd>15</CharacterOffsetEnd>
            <POS>VBP</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="5">
            <word>to</word>
            <lemma>to</lemma>
            <CharacterOffsetBegin>16</CharacterOffsetBegin>
            <CharacterOffsetEnd>18</CharacterOffsetEnd>
            <POS>TO</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="6">
            <word>do</word>
            <lemma>do</lemma>
            <CharacterOffsetBegin>19</CharacterOffsetBegin>
            <CharacterOffsetEnd>21</CharacterOffsetEnd>
            <POS>VB</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="7">
            <word>is</word>
            <lemma>be</lemma>
            <CharacterOffsetBegin>22</CharacterOffsetBegin>
            <CharacterOffsetEnd>24</CharacterOffsetEnd>
            <POS>VBZ</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="8">
            <word>to</word>
            <lemma>to</lemma>
            <CharacterOffsetBegin>25</CharacterOffsetBegin>
            <CharacterOffsetEnd>27</CharacterOffsetEnd>
            <POS>TO</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="9">
            <word>be</word>
            <lemma>be</lemma>
            <CharacterOffsetBegin>28</CharacterOffsetBegin>
            <CharacterOffsetEnd>30</CharacterOffsetEnd>
            <POS>VB</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="10">
            <word>treated</word>
            <lemma>treat</lemma>
            <CharacterOffsetBegin>31</CharacterOffsetBegin>
            <CharacterOffsetEnd>38</CharacterOffsetEnd>
            <POS>VBN</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="11">
            <word>fairly</word>
            <lemma>fairly</lemma>
            <CharacterOffsetBegin>39</CharacterOffsetBegin>
            <CharacterOffsetEnd>45</CharacterOffsetEnd>
            <POS>RB</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
          <token id="12">
            <word>.</word>
            <lemma>.</lemma>
            <CharacterOffsetBegin>45</CharacterOffsetBegin>
            <CharacterOffsetEnd>46</CharacterOffsetEnd>
            <POS>.</POS>
            <NER>O</NER>
            <Speaker>PER0</Speaker>
          </token>
        </tokens>
        <parse>(ROOT (S (CC And) (NP (NP (DT all)) (SBAR (S (NP (PRP we)) (VP (VBP want) (S (VP (TO to) (VP (VB do)))))))) (VP (VBZ is) (S (VP (TO to) (VP (VB be) (VP (VBN treated) (ADVP (RB fairly))))))) (. .))) </parse>
        <dependencies type="basic-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="7">is</dependent>
          </dep>
          <dep type="cc">
            <governor idx="7">is</governor>
            <dependent idx="1">And</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="7">is</governor>
            <dependent idx="2">all</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="4">want</governor>
            <dependent idx="3">we</dependent>
          </dep>
          <dep type="rcmod">
            <governor idx="2">all</governor>
            <dependent idx="4">want</dependent>
          </dep>
          <dep type="aux">
            <governor idx="6">do</governor>
            <dependent idx="5">to</dependent>
          </dep>
          <dep type="xcomp">
            <governor idx="4">want</governor>
            <dependent idx="6">do</dependent>
          </dep>
          <dep type="aux">
            <governor idx="10">treated</governor>
            <dependent idx="8">to</dependent>
          </dep>
          <dep type="auxpass">
            <governor idx="10">treated</governor>
            <dependent idx="9">be</dependent>
          </dep>
          <dep type="xcomp">
            <governor idx="7">is</governor>
            <dependent idx="10">treated</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="10">treated</governor>
            <dependent idx="11">fairly</dependent>
          </dep>
        </dependencies>
        <dependencies type="collapsed-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="7">is</dependent>
          </dep>
          <dep type="cc">
            <governor idx="7">is</governor>
            <dependent idx="1">And</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="7">is</governor>
            <dependent idx="2">all</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="4">want</governor>
            <dependent idx="3">we</dependent>
          </dep>
          <dep type="rcmod">
            <governor idx="2">all</governor>
            <dependent idx="4">want</dependent>
          </dep>
          <dep type="aux">
            <governor idx="6">do</governor>
            <dependent idx="5">to</dependent>
          </dep>
          <dep type="xcomp">
            <governor idx="4">want</governor>
            <dependent idx="6">do</dependent>
          </dep>
          <dep type="aux">
            <governor idx="10">treated</governor>
            <dependent idx="8">to</dependent>
          </dep>
          <dep type="auxpass">
            <governor idx="10">treated</governor>
            <dependent idx="9">be</dependent>
          </dep>
          <dep type="xcomp">
            <governor idx="7">is</governor>
            <dependent idx="10">treated</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="10">treated</governor>
            <dependent idx="11">fairly</dependent>
          </dep>
        </dependencies>
        <dependencies type="collapsed-ccprocessed-dependencies">
          <dep type="root">
            <governor idx="0">ROOT</governor>
            <dependent idx="7">is</dependent>
          </dep>
          <dep type="cc">
            <governor idx="7">is</governor>
            <dependent idx="1">And</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="7">is</governor>
            <dependent idx="2">all</dependent>
          </dep>
          <dep type="nsubj">
            <governor idx="4">want</governor>
            <dependent idx="3">we</dependent>
          </dep>
          <dep type="rcmod">
            <governor idx="2">all</governor>
            <dependent idx="4">want</dependent>
          </dep>
          <dep type="aux">
            <governor idx="6">do</governor>
            <dependent idx="5">to</dependent>
          </dep>
          <dep type="xcomp">
            <governor idx="4">want</governor>
            <dependent idx="6">do</dependent>
          </dep>
          <dep type="aux">
            <governor idx="10">treated</governor>
            <dependent idx="8">to</dependent>
          </dep>
          <dep type="auxpass">
            <governor idx="10">treated</governor>
            <dependent idx="9">be</dependent>
          </dep>
          <dep type="xcomp">
            <governor idx="7">is</governor>
            <dependent idx="10">treated</dependent>
          </dep>
          <dep type="advmod">
            <governor idx="10">treated</governor>
            <dependent idx="11">fairly</dependent>
          </dep>
        </dependencies>
      </sentence>
    </sentences>
  </document>
</root>
